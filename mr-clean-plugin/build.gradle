plugins {
    alias libs.plugins.kotlin.jvm
    alias libs.plugins.vanniktech.publish
    id 'java-gradle-plugin'
}
dependencies {
    compileOnly gradleApi()
    implementation project(':mr-clean-runtime')

    implementation libs.android.gradlePlugin
    implementation libs.android.gradlePlugin
    implementation libs.plugin.ksp
    implementation libs.kotlin.stdlib
    implementation libs.kotlinPoet.core

    testImplementation libs.junit
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

sourceSets.main.java.srcDir "$buildDir/generated/source/mrclean"

gradlePlugin {
    plugins {
        mrclean {
            id = 'com.trello.mrclean'
            implementationClass = 'com.trello.mrclean.plugin.MrCleanPlugin'
        }
    }
}

tasks.register('pluginVersion') {
    def outputDir = file("$buildDir/generated/source/mrclean/")

    inputs.property 'version', version
    outputs.dir outputDir

    doLast {
        def versionFile = file("$outputDir/com/trello/mrclean/Version.kt")
        versionFile.parentFile.mkdirs()
        versionFile.text = """
// Generated file. Do not edit!
package com.trello.mrclean
val VERSION = "${project.version}"
"""
    }
}
afterEvaluate {
    tasks.named('compileKotlin') { dependsOn('pluginVersion') }
    tasks.named('sourcesJar') { dependsOn('pluginVersion') }
}
